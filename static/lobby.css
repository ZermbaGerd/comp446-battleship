.tile {
    background-color: lightblue;
    padding:3px;
    outline: 2px solid black;
}

.tile :hover {
    background-color: lightgrey;
    outline: 3px solid black;
}

/* A tile is inactive if it cannot be clicked. Every tile in ship maps is inactive, and any previously guessed tiles in hit maps are inactive */
.tile.inactive {
    pointer-events: none;
}

.tileContent {
    max-width: 100%;
    max-height: 100%;
}


#gameboard {
    display:grid;
    gap:10px;
    grid-template-columns: repeat(2, 50%);
    grid-template-rows:2;
}

#selfMap, #opponentMap {
    display: grid;
    gap: 2px;
    grid-template-columns: repeat(10, 8%);
    grid-template-rows: repeat(10, 8%)
}

/* placementElems contains placementTop and placementBottom */
#placementElems {
    display: grid;
    gap: 10px;
    grid-template-rows: 2;
}

/* placementTop contains sourceAndReady and placementBoard */
#placementTop {
    display: grid;
    gap: 10px;
    grid-template-columns: 20% 10% 70%;
    max-height: 80%;
}

#shipSource {
    display: grid;
    gap:2px;
    grid-template-columns: repeat(5, 20%);
    grid-template-rows: repeat(5, 20%);
    max-height: 40%;
    max-width: 90%;
}

#placementBoard {
    display: grid;
    gap: 2px;
    grid-template-columns: repeat(10, 8%);
    grid-template-rows: repeat(10, 8%);
}

/* placementBottom contains readyButtonDiv */

#placementBottom {
    display: grid;
    gap: 10px;
    grid-template-columns: repeat(2, 50%);
}

#readyButtonDiv {
    padding: 20px;
    gap: 2px; 
}

#readyButtonDiv > button {
    color: green;
}

/* https://www.w3schools.com/css/css_attribute_selectors.asp */
#readyButtonDiv > button[disabled] {
    color: red;
}

.highlighted {
    background-color: purple;
}

/* Worth seeing if !important is really the best way of doing this - idk what's overwriting it when I don't have it */
.hide {
    display: none !important;
}